name: Test Build

on:
#  push:
#    branches:
#      - main
#  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Build With Gradle
        run: |
          chmod +x gradlew
          ./gradlew assemblerelease --build-cache --parallel --daemon --warning-mode all
      - name: Prepare App
        run: |
          mkdir -p ${{ github.workspace }}/apk/
          for file in `find ~ -name "*.apk" -print`; do
            mv "$file" ${{ github.workspace }}/apk/
          done
            ls -l ${{ github.workspace }}/apk/
            nn=`ls --time-style='+%Y%m%d' -l *.apk 2>/dev/null |wc -l`;if [ $nn -gt 0 ]; then  ver=`ls --time-style='+%Y%m%d' -l *.apk |head -n 1|awk '{print $6}'`;  else ver='release'; fi
      - name: Upload App To Artifact
        uses: actions/upload-artifact@v3
        with:
          name: com.github.tvbox.osc
          path: ${{ github.workspace }}/apk/*

 - name: Create GitHub release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: $ver
        title: ${{ env.ReleaseVersion }}
        prerelease: false
        files: |
          ${{ github.workspace }}/apk/*
          
- name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: TODO
          draft: true
          prerelease: false

  - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: tvbox.apk
          asset_name: tvbox.apk
          asset_content_type: application/octet-stream
